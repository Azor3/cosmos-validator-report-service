# HTTP — redirect all traffic to HTTPS
server {
    listen 80;
    listen [::]:80 default_server ipv6only=on;
    return 301 https://$host$request_uri;
}

# HTTPS — proxy all requests to the Node app
server {
    # Enable HTTP/2
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name mainnet-cosmos-rpc.rpc101.org;

    # Use the Let’s Encrypt certificates
    ssl_certificate /etc/letsencrypt/live/mainnet-cosmos-rpc.rpc101.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mainnet-cosmos-rpc.rpc101.org/privkey.pem;

    # Include the SSL configuration from cipherli.st
#    include snippets/ssl-params.conf;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://localhost:26657/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
    location /websocket {
    proxy_pass http://localhost:26657/websocket;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $http_host;
    proxy_cache_bypass $http_upgrade;
}

}


# HTTP — redirect all traffic to HTTPS
server {
    listen 80;
    listen [::]:80 default_server ipv6only=on;
    return 301 https://$host$request_uri;
}

# HTTPS — proxy all requests to the Node app
server {
    # Enable HTTP/2
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name celestia-rpc.test101.online;

    # Use the Let’s Encrypt certificates
    ssl_certificate /etc/letsencrypt/live/celestia-rpc.test101.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/celestia-rpc.test101.online/privkey.pem;

    # Include the SSL configuration from cipherli.st
#    include snippets/ssl-params.conf;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://localhost:26657/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
    location /websocket {
    proxy_pass http://localhost:26657/websocket;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $http_host;
    proxy_cache_bypass $http_upgrade;
}

}




NGİNX REST

# HTTP — redirect all traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name celestia-rest.test101.online;
    return 301 https://$host$request_uri;
}

# HTTPS — proxy all requests to the Node app
server {
    # Enable HTTP/2
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name mainnet-cosmos-rest.rpc101.org;

    # Use the Let’s Encrypt certificates
    ssl_certificate /etc/letsencrypt/live/mainnet-cosmos-rpc.rpc101.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mainnet-cosmos-rpc.rpc101.org/privkey.pem;

    # Include the SSL configuration from cipherli.st
#    include snippets/ssl-params.conf;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://localhost:1317/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
}




NGİNX FOR LAVA PROVİDER SERVER

server {
    listen 443 ssl http2;
    server_name provider-lava-mainnet.rpc101.org;

    ssl_certificate /etc/letsencrypt/live/provider-lava-mainnet.rpc101.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/provider-lava-mainnet.rpc101.org/privkey.pem;
    error_log /var/log/nginx/debug.log debug;

    location / {
        proxy_pass http://127.0.0.1:2222;
        grpc_pass 127.0.0.1:2222;
    }
}

server {
    listen 443 ssl http2;
    server_name provider-cosmos-mainnet.rpc101.org;

    ssl_certificate /etc/letsencrypt/live/provider-lava-mainnet.rpc101.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/provider-lava-mainnet.rpc101.org/privkey.pem;
    error_log /var/log/nginx/debug.log debug;

    location / {
        proxy_pass http://127.0.0.1:2223;
        grpc_pass 127.0.0.1:2223;
    }
}







Provider.yml


endpoints:
  - api-interface: tendermintrpc
    chain-id: COSMOSHUB
    network-address:
      address: "127.0.0.1:2223" # Provider'ın dinlediği adres, sabit kalabilir
      disable-tls: true
    node-urls:
      - url: wss://mainnet-cosmos-rest.rpc101.org/websocket # RPC sunucusunun IP adresi veya alan adı
      - url: https://mainnet-cosmos-rest.rpc101.org/
  - api-interface: grpc
    chain-id: COSMOSHUB
    network-address:
      address: "127.0.0.1:2223"
      disable-tls: true
    node-urls:
            - url: 116.202.234.107:9090
  - api-interface: rest
    chain-id: COSMOSHUB    
    network-address:
      address: "127.0.0.1:2223"
      disable-tls: true
    node-urls: 
      - url: https://mainnet-cosmos-rest.rpc101.org/
  - api-interface: tendermintrpc
      chain-id: LAV1
      network-address:
        address: 127.0.0.1:2222
        disable-tls: true
      node-urls:
        - url: ws://127.0.0.1:26657/websocket
        - url: http://127.0.0.1:26657
    - api-interface: grpc
      chain-id: LAV1
      network-address:
        address: 127.0.0.1:2222
        disable-tls: true
      node-urls: 
        url: 127.0.0.1:9090
    - api-interface: rest
      chain-id: LAV1
      network-address:
        address: 127.0.0.1:2222
        disable-tls: true
      node-urls: 
        url: http://127.0.0.1:1317


lavap rpcprovider provider.yml --from wallet101 --geolocation 2 --chain-id lava-mainnet-1 --log_level debug